@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>

<br />
<br />

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <img class="card-img-top" src="@($"/images/{city}.png")" alt="Card image cap">
                        @*We use explicit syntax by creating the function to get the city names to display
                            with the image. It is an EventHandler function. city is a string.
                        *@
                        <button type="button" class="btn btn-primary" @onclick="@(() => {SelectCity(city); })">@city</button>
                    </div>
                </div>

            </div>
        }
    </div>
</div>

@*Testing to ensure that the function is working properly and the interactivity works as it should. *@
@* @selectedCity *@

<br />


<ServerComponent @rendermode="InteractiveServer"></ServerComponent>

<br />
<ul>
    @foreach(var server in servers)
    {
        <li>
            @server.Name in @server.City is
            <span style="color: @((@server.IsOnline ? "green": "red"))">
                @(server.IsOnline ? "online": "offline")
            </span> 
            &nbsp;
            <a href="/servers/@server.Id" class="btn btn-link">Edit</a>
            &nbsp;
            @*
            Using a form does a POST which is better for security compared to an anchor
            which stores the data in the history like a GET. The page will refresh due to the line
            in the code block. It does not seem truly interactive. 
            *@

            <EditForm
            Model = "server" 
            FormName="@($"form-server-{server.Id}")"
            OnValidSubmit="@(()=> { DeleteServer(server.Id); })">
                <button type="submit" class="btn btn-primary">Delete</button>

            </EditForm>
        </li>
    }

</ul>

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {


    private List<Server> servers = ServersRepository.GetServersByCity("Toronto"); 

    private List<String> cities = CitiesRepository.GetCities();

    private string selectedCity = "Toronto";

    private void DeleteServer(int id)
    {
        if (id > 0)
        {
            ServersRepository.DeleteServer(id);
            // servers = ServersRepository.GetServersByCity("Toronto");
            // NavigationManager.Refresh();
            NavigationManager.NavigateTo("/servers");   
        }
    }


    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;
        this.servers = ServersRepository.GetServersByCity(this.selectedCity);
    }


}
