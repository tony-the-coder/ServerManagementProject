@page "/servers/{id:int}"

<h3>Edited Server</h3>

<br />
<br />


@* We do not want null reference values *@

@if (server != null)
{
    //The date context is very important for data to display properly
    //FormName is a parameter
    <EditForm Model="server" FormName="formServer" OnSubmit="Submit">

        <InputNumber @bind-Value="server.Id" hidden></InputNumber>


        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
        </div>


        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br />

        <button type="submit" class="btn btn-primary">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}



@code {
    //This is a root paramater, remember that the name must match but
    //is case-insensitive, so it can be id or ID and this is the property

    [Parameter]
    public int id { get; set; }

    //Creating the server object
    //Data from form is bound to this property
    [SupplyParameterFromForm(FormName ="formServer")]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        //Loading information that is associated to the ID and storing it in the server object
        //When loding data from a static repository, the submitted data will be repoulated with the original data
        //Using the ?? operator to avoid null reference exceptions
        server ??= ServersRepository.GetServerById(this.id);
    }


    private void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.Id, server);
        }
    }
}